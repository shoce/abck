# https://docs.github.com/en/actions/learn-github-actions/contexts
name: release
permissions:
  contents: write
on:
  push:
    branches:
      - main

jobs:

  build-push:
    runs-on: ubuntu-latest
    steps:

      - name: version
        run: |
          VERSION=$( date '+%y.%m%d.%H%M' | sed 's/\.0*/./g' )
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # https://github.com/actions/checkout/
      - uses: actions/checkout@v4

      - name: archive
        run: |
          mkdir -p /tmp/${{ github.event.repository.name }}/
          cp * /tmp/${{ github.event.repository.name }}/
          cd /tmp/${{ github.event.repository.name }}/
          tar -c --exclude readme.text --numeric-owner --group=:0 --owner=:0 -z -v -f ${{ github.event.repository.name }}.tar.gz *
          echo '/tmp/${{ github.event.repository.name }}/:'
          ls -l -a

      - name: release notes
        run: |
          {
          echo 'install latest:'
          echo '```'
          echo 'curl -s -S -L https://github.com/shoce/${{ github.event.repository.name }}/releases/latest/download/${{ github.event.repository.name }}.tar.gz | tar -v -z -C /bin/ -t '
          echo '```'
          } >/tmp/${{ github.event.repository.name }}/release.notes..text

      - name: gh release
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ env.VERSION }} /tmp/${{ github.event.repository.name }}/${{ github.event.repository.name }}.tar.gz --notes-file /tmp/${{ github.event.repository.name }}/release.notes..text

      - name: gh release clean
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          for tag in $(
            gh release list --order asc --limit 100 --json tagName --jq '.[] | select(.tagName | test("-")) | .tagName' | head -n -1
          ) ; do
            gh release delete "$tag" -y
          done


